{"version":3,"sources":["../../src/file-upload/zgwnu-bonita-file-upload.service.ts"],"names":[],"mappings":"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","file":"zgwnu-bonita-file-upload.service.js","sourceRoot":"","sourcesContent":["// ZaakgerichtWerken.nu Bonita Rest Api File Upload Service\n// --------------------------------------------------------------------------\n//\n// based on: http://documentation.bonitasoft.com/?page=manage-files-using-upload-servlet-and-rest-api\n//         : http://stackoverflow.com/questions/36352405/file-upload-with-angular2-to-rest-api\n//\n//\n// To-Do:\n// (1) map uploadFile Success Response to BonitaContractInputFile\n//     including File Content-Type etc...\n//\nimport { Injectable } from '@angular/core'\nimport { Http, Response, Headers, RequestOptions } from '@angular/http'\n\nimport { Observable } from 'rxjs/Observable'\nimport 'rxjs/add/operator/catch'\nimport 'rxjs/add/operator/map'\n\nimport { ZgwnuBonitaRestApiService } from '../rest-api/zgwnu-bonita-rest-api.service'\nimport { ZgwnuBonitaConfigService } from '../rest-api/zgwnu-bonita-config.service'\nimport { ZgwnuBonitaFileUploadResponse } from './zgwnu-bonita-file-upload-response'\n\n\nexport class ZgwnuBonitaFileUploadService extends ZgwnuBonitaRestApiService {\n\n    constructor(\n        private configService: ZgwnuBonitaConfigService,\n        private http: Http\n    ) \n    { \n        super()\n    }\n\n    uploadFile(file: File, fileId: string): Observable<ZgwnuBonitaFileUploadResponse> {\n        return this.servletUploadFile(this.configService.bonitaUrls.fileUploadUrl, file, fileId)\n    }\n\n    uploadProcess(file: File, fileId: string): Observable<ZgwnuBonitaFileUploadResponse> {\n        return this.servletUploadFile(this.configService.bonitaUrls.processUploadUrl, file, fileId)\n    }\n\n    uploadOrganization(file: File, fileId: string): Observable<ZgwnuBonitaFileUploadResponse> {\n        return this.servletUploadFile(this.configService.bonitaUrls.organizationUploadUrl, file, fileId)\n    }\n\n    uploadActors(file: File, fileId: string): Observable<ZgwnuBonitaFileUploadResponse> {\n        return this.servletUploadFile(this.configService.bonitaUrls.actorsUploadUrl, file, fileId)\n    }\n\n    uploadImage(file: File, fileId: string): Observable<ZgwnuBonitaFileUploadResponse> {\n        return this.servletUploadFile(this.configService.bonitaUrls.imageUploadUrl, file, fileId)\n    }\n\n    private servletUploadFile(servletUrl: string, file: File, fileId: string): Observable<ZgwnuBonitaFileUploadResponse> {\n        let formData: FormData = new FormData()\n        formData.append(fileId, file, file.name)\n        let uploadHeaders: Headers = new Headers()\n        let uploadOptions: RequestOptions = new RequestOptions({ headers: uploadHeaders })\n        this.configService.appendSessionOptions(uploadOptions)\n        return this.http.post(servletUrl, formData, uploadOptions)\n                        .map(this.mapFileUploadResponse)\n                        .catch(this.handleResponseError)\n    }\n\n    private mapFileUploadResponse(res: any) {\n        let fileUploadResponse: ZgwnuBonitaFileUploadResponse = new ZgwnuBonitaFileUploadResponse()\n        fileUploadResponse.status = res.status\n        fileUploadResponse.statusText = res.statusText\n        fileUploadResponse.tempPath = res._body\n        return fileUploadResponse\n    }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ZgwnuBonitaConfigService, },\n{type: Http, },\n];\n}\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}