{"version":3,"sources":["../../../src/bpm/user-task/zgwnu-bonita-bpm-user-task.service.ts"],"names":[],"mappings":"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","file":"zgwnu-bonita-bpm-user-task.service.js","sourceRoot":"","sourcesContent":["// ZaakgerichtWerken.nu Bonita Rest Api BPM User Task Service\n// --------------------------------------------------------------------------\n//\n// based on http://documentation.bonitasoft.com/?page=bpm-api#toc6\n//\n//\nimport { Injectable } from '@angular/core'\nimport { Http } from '@angular/http'\n\nimport { Observable } from 'rxjs/Observable'\nimport 'rxjs/add/operator/catch'\nimport 'rxjs/add/operator/map'\n\nimport { ZgwnuBonitaRestApiService } from '../../rest-api/zgwnu-bonita-rest-api.service'\nimport { ZgwnuBonitaDataMappingInterface } from '../../rest-api/zgwnu-bonita-data-mapping.interface'\nimport { ZgwnuBonitaConfigService } from '../../rest-api/zgwnu-bonita-config.service'\nimport { ZgwnuBonitaBpmTaskUpdateInput } from '../task/zgwnu-bonita-bpm-task-update-input'\nimport { ZgwnuBonitaUserTask } from './zgwnu-bonita-user-task'\nimport { ZgwnuBonitaUserTaskMapping } from './zgwnu-bonita-user-task-mapping'\nimport { ZgwnuBonitaResponse } from '../../rest-api/zgwnu-bonita-response'\n\n\nexport class ZgwnuBonitaBpmUserTaskService extends ZgwnuBonitaRestApiService {\n    private readonly USER_TASK_RESOURCE_PATH: string = '/bpm/userTask'\n    private userTaskResourceUrl: string\n\n    constructor(\n        private configService: ZgwnuBonitaConfigService,\n        private http: Http\n    ) \n    { \n        super()\n\n        // configure resource urls\n        this.userTaskResourceUrl = configService.bonitaUrls.apiUrl + this.USER_TASK_RESOURCE_PATH\n    }\n\n    getUserTask(userTaskId: string): Observable<ZgwnuBonitaUserTask> {\n        let userTaskMapping: ZgwnuBonitaDataMappingInterface = new ZgwnuBonitaUserTaskMapping()\n        return this.http.get(this.userTaskResourceUrl + '/' + userTaskId, this.configService.options)\n                        .map(userTaskMapping.mapResponse)\n                        .catch(this.handleResponseError)\n    }\n\n    getUserTaskContext(userTaskId: string): Observable<any> {\n        return this.http.get(this.userTaskResourceUrl + '/' + userTaskId + '/context', this.configService.options)\n                        .map(this.mapping.mapResponse)\n                        .catch(this.handleResponseError)\n    }\n\n    assignUserTask(userTaskId: string, userId?: string): Observable<ZgwnuBonitaResponse> {\n        let body: ZgwnuBonitaBpmTaskUpdateInput = new ZgwnuBonitaBpmTaskUpdateInput()\n\n        if (userId) {\n            // assign to specified user\n            body.assigned_id = userId\n        } else {\n            // assign to current logged user\n            body.assigned_id = this.configService.session.user_id\n        }\n\n        let putUrl = this.userTaskResourceUrl + '/' + userTaskId\n        return this.http.put(putUrl, body, this.configService.sendOptions)\n                        .map(this.mapSuccessResponse)\n                        .catch(this.handleResponseError)\n\n    }\n\n    executeUserTask(userTaskId: string, contractValues: any): Observable<ZgwnuBonitaResponse> {\n        let postUrl = this.userTaskResourceUrl + '/' + userTaskId + '/execution'\n        return this.http.post(postUrl, contractValues, this.configService.sendOptions)\n                        .map(this.mapSuccessResponse)\n                        .catch(this.handleResponseError)\n    }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ZgwnuBonitaConfigService, },\n{type: Http, },\n];\n}\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}