{"version":3,"sources":["../../../src/bpm/data/zgwnu-bonita-bpm-data.service.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,wDAAC;AACD,6EAA6E;AAC7E,EAAE;AACF,mEAAmE;AACnE,EAAE;AACF,EAAE;AACF,OAAO,EAAE,UAAA,EAAW,MAAO,eAAA,CAAA;AAC3B,OAAO,EAAE,IAAA,EAAe,MAAO,eAAA,CAAA;AAG/B,OAAO,yBAAA,CAAA;AACP,OAAO,uBAAA,CAAA;AAEP,OAAO,EAAE,yBAAA,EAA0B,MAAO,8CAAA,CAAA;AAE1C,OAAO,EAAE,wBAAA,EAAyB,MAAO,4CAAA,CAAA;AAGzC,OAAO,EAAE,8BAAA,EAA+B,MAAO,sCAAA,CAAA;AAI/C;IAA+C,6CAAyB;IAIpE,mCACY,aAAuC,EACvC,IAAU;QAFtB,YAKI,iBAAO,SAIV;QARW,mBAAa,GAAb,aAAa,CAA0B;QACvC,UAAI,GAAJ,IAAI,CAAM;QALd,8BAAwB,GAAW,mBAAmB,CAAA;QAU1D,yBAAyB;QACzB,KAAI,CAAC,uBAAuB,GAAG,aAAa,CAAC,UAAU,CAAC,MAAM,GAAG,KAAI,CAAC,wBAAwB,CAAA;;IAClG,CAAC;IAED,eAAe;IACf,EAAE;IACF,mEAAmE;IACnE,EAAE;IACF,EAAE;IACF,mDAAe,GAAf,UAAgB,MAAc,EAAE,YAAoB;QAChD,IAAI,mBAAmB,GAAoC,IAAI,8BAA8B,EAAE,CAAA;QAC/F,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,uBAAuB,GAAG,GAAG,GAAG,MAAM,GAAG,GAAG,GAAG,YAAY,EAAE,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC;aACjG,GAAG,CAAC,mBAAmB,CAAC,WAAW,CAAC;aACpC,KAAK,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAA;IACpD,CAAC;IAED,uDAAmB,GAAnB,UAAoB,WAAmC;QACnD,IAAI,mBAAmB,GAAoC,IAAI,8BAA8B,EAAE,CAAA;QAC/F,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,kBAAkB,CAAC,WAAW,CAAC,EAAE,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC;aACrE,GAAG,CAAC,mBAAmB,CAAC,gBAAgB,CAAC;aACzC,KAAK,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAA;IACpD,CAAC;IAEO,sDAAkB,GAA1B,UAA2B,WAAmC;QAC1D,MAAM,CAAC,IAAI,CAAC,uBAAuB,GAAG,GAAG,GAAG,WAAW,CAAC,mBAAmB,EAAE,CAAA;IACjF,CAAC;IAEE,oCAAU,GAA0B;QAC3C,EAAE,IAAI,EAAE,UAAU,EAAE;KACnB,CAAC;IACF,kBAAkB;IACX,wCAAc,GAAmE,cAAM,OAAA;QAC9F,EAAC,IAAI,EAAE,wBAAwB,GAAG;QAClC,EAAC,IAAI,EAAE,IAAI,GAAG;KACb,EAH6F,CAG7F,CAAC;IACF,gCAAC;CA9CD,AA8CC,CA9C8C,yBAAyB,GA8CvE;SA9CY,yBAAyB","file":"zgwnu-bonita-bpm-data.service.js","sourceRoot":"","sourcesContent":["// ZaakgerichtWerken.nu Bonita Rest Api BPM Data Service\n// --------------------------------------------------------------------------\n//\n// based on http://documentation.bonitasoft.com/?page=bpm-api#toc13\n//\n//\nimport { Injectable } from '@angular/core'\nimport { Http, Response } from '@angular/http'\n\nimport { Observable } from 'rxjs/Observable'\nimport 'rxjs/add/operator/catch'\nimport 'rxjs/add/operator/map'\n\nimport { ZgwnuBonitaRestApiService } from '../../rest-api/zgwnu-bonita-rest-api.service'\nimport { ZgwnuBonitaDataMappingInterface } from '../../rest-api/zgwnu-bonita-data-mapping.interface'\nimport { ZgwnuBonitaConfigService } from '../../rest-api/zgwnu-bonita-config.service'\nimport { ZgwnuBonitaSearchParms } from '../zgwnu-bonita-search-parms'\nimport { ZgwnuBonitaCaseVariable } from './zgwnu-bonita-case-variable'\nimport { ZgwnuBonitaCaseVariableMapping } from './zgwnu-bonita-case-variable-mapping'\n\n\n\nexport class ZgwnuBonitaBpmDataService extends ZgwnuBonitaRestApiService {\n    private caseVariableResourcePath: string = '/bpm/caseVariable'\n    private caseVariableResourceUrl: string\n\n    constructor(\n        private configService: ZgwnuBonitaConfigService,\n        private http: Http\n    ) \n    { \n        super()\n        \n        // configure resource url\n        this.caseVariableResourceUrl = configService.bonitaUrls.apiUrl + this.caseVariableResourcePath\n    }\n\n    // CaseVariable\n    //\n    // based on http://documentation.bonitasoft.com/?page=bpm-api#toc15\n    //\n    //\n    getCaseVariable(caseId: string, variableName: string): Observable<ZgwnuBonitaCaseVariable> {\n        let caseVariableMapping: ZgwnuBonitaDataMappingInterface = new ZgwnuBonitaCaseVariableMapping()\n        return this.http.get(this.caseVariableResourceUrl + '/' + caseId + '/' + variableName, this.configService.options)\n                        .map(caseVariableMapping.mapResponse)\n                        .catch(this.handleResponseError)\n    }\n    \n    searchCaseVariables(searchParms: ZgwnuBonitaSearchParms): Observable<ZgwnuBonitaCaseVariable[]> {\n        let caseVariableMapping: ZgwnuBonitaDataMappingInterface = new ZgwnuBonitaCaseVariableMapping()\n        return this.http.get(this.buildSearchRequest(searchParms), this.configService.options)\n                        .map(caseVariableMapping.mapResponseArray)\n                        .catch(this.handleResponseError)\n    }\n\n    private buildSearchRequest(searchParms: ZgwnuBonitaSearchParms): string {\n        return this.caseVariableResourceUrl + '?' + searchParms.getUrlEncondedParms()\n    }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ZgwnuBonitaConfigService, },\n{type: Http, },\n];\n}\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}