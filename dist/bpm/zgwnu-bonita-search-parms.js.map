{"version":3,"sources":["../../src/bpm/zgwnu-bonita-search-parms.ts"],"names":[],"mappings":"AAAA,oCAAoC;AACpC,6EAA6E;AAC7E,EAAE;AACF,6EAA6E;AAC7E,EAAE;AACF,sEAAsE;AACtE,wEAAwE;AACxE,EAAE;AACF;IAEE,gCACS,IAAY,EACZ,KAAa,EACb,KAAc,EACd,KAAc,EACd,OAAkB,EAClB,OAAkB;QALlB,SAAI,GAAJ,IAAI,CAAQ;QACZ,UAAK,GAAL,KAAK,CAAQ;QACb,UAAK,GAAL,KAAK,CAAS;QACd,UAAK,GAAL,KAAK,CAAS;QACd,YAAO,GAAP,OAAO,CAAW;QAClB,YAAO,GAAP,OAAO,CAAW;IACtB,CAAC;IAEN,oDAAmB,GAAnB;QACI,IAAI,UAAkB,CAAA;QAEtB,kCAAkC;QAClC,UAAU,GAAG,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAA;QAErC,4CAA4C;QAC5C,UAAU,GAAG,UAAU,GAAG,KAAK,GAAG,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAA;QAEpD,mDAAmD;QACnD,6DAA6D;QAC7D,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;YACf,UAAU,GAAG,UAAU,GAAG,KAAK,GAAG,kBAAkB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAA;QAClE,CAAC;QAED,wCAAwC;QACxC,wDAAwD;QACxD,+EAA+E;QAC/E,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;YACf,UAAU,GAAG,UAAU,GAAG,KAAK,GAAG,kBAAkB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAA;QAClE,CAAC;QAED,kEAAkE;QAClE,uFAAuF;QACvF,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC;YAChB,GAAG,CAAC,CAAe,UAAY,EAAZ,KAAA,IAAI,CAAC,OAAO,EAAZ,cAAY,EAAZ,IAAY;gBAA1B,IAAI,MAAM,SAAA;gBAEZ,UAAU,GAAG,UAAU,GAAG,KAAK,GAAG,kBAAkB,CAAC,MAAM,CAAC,CAAA;aAC/D;QACH,CAAC;QAED,uHAAuH;QACvH,4HAA4H;QAC5H,mDAAmD;QACnD,wHAAwH;QACxH,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC;YAChB,GAAG,CAAC,CAAe,UAAY,EAAZ,KAAA,IAAI,CAAC,OAAO,EAAZ,cAAY,EAAZ,IAAY;gBAA1B,IAAI,MAAM,SAAA;gBAEZ,UAAU,GAAG,UAAU,GAAG,KAAK,GAAG,kBAAkB,CAAC,MAAM,CAAC,CAAA;aAC/D;QACH,CAAC;QAED,4BAA4B;QAC5B,IAAI,eAAe,GAAW,UAAU,CAAC,OAAO,CAAC,MAAM,EAAE,GAAG,CAAC,CAAA;QAE7D,MAAM,CAAC,eAAe,CAAA;IAC1B,CAAC;IAEH,6BAAC;AAAD,CA3DA,AA2DC,IAAA","file":"zgwnu-bonita-search-parms.js","sourceRoot":"","sourcesContent":["// Bonita Rest Api Search Parameters\n// --------------------------------------------------------------------------\n//\n// based on http://documentation.bonitasoft.com/?page=rest-api-overview#toc13\n//\n// Request URL template: .../API/resource?p={page}&c={count}&o={order}\n//                       &s={query}&f={filter_name}={filter_value}&f=...\n//\nexport class ZgwnuBonitaSearchParms {\n\n  constructor(\n    public page: number,\n    public count: number,\n    public order?: string,\n    public query?: string,\n    public filters?: string[],\n    public deploys?: string[]\n  ) {  }\n\n  getUrlEncondedParms(): string {\n      var buildParms: string\n\n      // p: index of the page to display\n      buildParms = 'p=' + String(this.page)\n      \n      // c: maximum number of elements to retrieve\n      buildParms = buildParms + '&c=' + String(this.count)\n      \n      // o: order of presentation of values in response: \n      //    must be either attributeName ASC or attributeName DESC.\n      if (this.order) {\n        buildParms = buildParms + '&o=' + encodeURIComponent(this.order)\n      }\n      \n      // s: search on name or search indexes. \n      //    If word-based search is disabled, s=Valid returns \n      //    matches containing the string \"valid\" at the start of the attribute value\n      if (this.query) {\n        buildParms = buildParms + '&s=' + encodeURIComponent(this.query)\n      }\n\n      // f: list of filters, specified as attributeName=attributeValue. \n      //    To filter on more than one attribute, specify an f parameters for each attribute.\n      if (this.filters) {\n         for (let filter of this.filters)\n        { \n            buildParms = buildParms + '&f=' + encodeURIComponent(filter)\n        }\n      }\n\n      // d: on some resources, in GET methods the d (deploy) URL query parameter can be used to extend the response objects. \n      //    The value of this parameter consists of an attribute for which you want to make an extended request (called a deploy) \n      //    and retrieve attributes of a linked resource.\n      //    This means that instead of retrieving the ID or a parent or referenced resource, you can retrieve the full object.\n      if (this.deploys) {\n         for (let deploy of this.deploys)\n        { \n            buildParms = buildParms + '&d=' + encodeURIComponent(deploy)\n        }\n      }\n\n      // return spaces '+' encoded\n      var urlEncodedParms: string = buildParms.replace(/%20/g, '+')\n      \n      return urlEncodedParms\n  }\n\n}"]}