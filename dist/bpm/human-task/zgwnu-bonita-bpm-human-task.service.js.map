{"version":3,"sources":["../../../src/bpm/human-task/zgwnu-bonita-bpm-human-task.service.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,8DAAC;AACD,6EAA6E;AAC7E,EAAE;AACF,kEAAkE;AAClE,EAAE;AACF,EAAE;AACF,OAAO,EAAE,UAAA,EAAW,MAAO,eAAA,CAAA;AAC3B,OAAO,EAAE,IAAA,EAAK,MAAO,eAAA,CAAA;AAGrB,OAAO,yBAAA,CAAA;AACP,OAAO,uBAAA,CAAA;AAEP,OAAO,EAAE,yBAAA,EAA0B,MAAO,8CAAA,CAAA;AAE1C,OAAO,EAAE,wBAAA,EAAyB,MAAO,4CAAA,CAAA;AAGzC,OAAO,EAAE,2BAAA,EAA4B,MAAO,mCAAA,CAAA;AAI5C;IAAoD,kDAAyB;IAIzE,wCACY,aAAuC,EACvC,IAAU;QAFtB,YAKI,iBAAO,SAEV;QANW,mBAAa,GAAb,aAAa,CAA0B;QACvC,UAAI,GAAJ,IAAI,CAAM;QALL,8BAAwB,GAAW,gBAAgB,CAAA;QAShE,KAAI,CAAC,oBAAoB,GAAG,aAAa,CAAC,UAAU,CAAC,MAAM,GAAG,KAAI,CAAC,wBAAwB,CAAA;;IAC/F,CAAC;IAED,yDAAgB,GAAhB,UAAiB,WAAmC;QAChD,IAAI,gBAAgB,GAAoC,IAAI,2BAA2B,EAAE,CAAA;QACzF,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,2BAA2B,CAAC,WAAW,CAAC,EAAE,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC;aAC9E,GAAG,CAAC,gBAAgB,CAAC,gBAAgB,CAAC;aACtC,KAAK,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAA;IACpD,CAAC;IAEO,oEAA2B,GAAnC,UAAoC,WAAmC;QACnE,MAAM,CAAC,IAAI,CAAC,oBAAoB,GAAG,GAAG,GAAG,WAAW,CAAC,mBAAmB,EAAE,CAAA;IAC9E,CAAC;IAED,qDAAY,GAAZ,UAAa,WAAmB;QAC5B,IAAI,gBAAgB,GAAoC,IAAI,2BAA2B,EAAE,CAAA;QACzF,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,oBAAoB,GAAG,GAAG,GAAG,WAAW,EAAE,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC;aAC9E,GAAG,CAAC,gBAAgB,CAAC,WAAW,CAAC;aACjC,KAAK,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAA;IACpD,CAAC;IAEE,yCAAU,GAA0B;QAC3C,EAAE,IAAI,EAAE,UAAU,EAAE;KACnB,CAAC;IACF,kBAAkB;IACX,6CAAc,GAAmE,cAAM,OAAA;QAC9F,EAAC,IAAI,EAAE,wBAAwB,GAAG;QAClC,EAAC,IAAI,EAAE,IAAI,GAAG;KACb,EAH6F,CAG7F,CAAC;IACF,qCAAC;CAvCD,AAuCC,CAvCmD,yBAAyB,GAuC5E;SAvCY,8BAA8B","file":"zgwnu-bonita-bpm-human-task.service.js","sourceRoot":"","sourcesContent":["// ZaakgerichtWerken.nu Bonita Rest Api BPM Human Task Service\n// --------------------------------------------------------------------------\n//\n// based on http://documentation.bonitasoft.com/?page=bpm-api#toc3\n//\n//\nimport { Injectable } from '@angular/core'\nimport { Http } from '@angular/http'\n\nimport { Observable } from 'rxjs/Observable'\nimport 'rxjs/add/operator/catch'\nimport 'rxjs/add/operator/map'\n\nimport { ZgwnuBonitaRestApiService } from '../../rest-api/zgwnu-bonita-rest-api.service'\nimport { ZgwnuBonitaDataMappingInterface } from '../../rest-api/zgwnu-bonita-data-mapping.interface'\nimport { ZgwnuBonitaConfigService } from '../../rest-api/zgwnu-bonita-config.service'\nimport { ZgwnuBonitaSearchParms } from '../zgwnu-bonita-search-parms'\nimport { ZgwnuBonitaHumanTask } from './zgwnu-bonita-human-task'\nimport { ZgwnuBonitaHumanTaskMapping } from './zgwnu-bonita-human-task-mapping'\nimport { ZgwnuBonitaResponse } from '../../rest-api/zgwnu-bonita-response'\n\n\nexport class ZgwnuBonitaBpmHumanTaskService extends ZgwnuBonitaRestApiService {\n    private readonly HUMAN_TASK_RESOURCE_PATH: string = '/bpm/humanTask'\n    private humanTaskResourceUrl: string\n\n    constructor(\n        private configService: ZgwnuBonitaConfigService,\n        private http: Http\n    ) \n    { \n        super()\n        this.humanTaskResourceUrl = configService.bonitaUrls.apiUrl + this.HUMAN_TASK_RESOURCE_PATH\n    }\n\n    searchHumanTasks(searchParms: ZgwnuBonitaSearchParms): Observable<ZgwnuBonitaHumanTask[]> {\n        let humanTaskMapping: ZgwnuBonitaDataMappingInterface = new ZgwnuBonitaHumanTaskMapping()\n        return this.http.get(this.buildHumanTaskSearchRequest(searchParms), this.configService.options)\n                        .map(humanTaskMapping.mapResponseArray)\n                        .catch(this.handleResponseError)\n    }\n\n    private buildHumanTaskSearchRequest(searchParms: ZgwnuBonitaSearchParms): string {\n        return this.humanTaskResourceUrl + '?' + searchParms.getUrlEncondedParms()\n    }\n\n    getHumanTask(humanTaskId: string): Observable<ZgwnuBonitaHumanTask> {\n        let humanTaskMapping: ZgwnuBonitaDataMappingInterface = new ZgwnuBonitaHumanTaskMapping()\n        return this.http.get(this.humanTaskResourceUrl + '/' + humanTaskId, this.configService.options)\n                        .map(humanTaskMapping.mapResponse)\n                        .catch(this.handleResponseError)\n    }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ZgwnuBonitaConfigService, },\n{type: Http, },\n];\n}\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}