{"version":3,"sources":["../../../src/bpm/case/zgwnu-bonita-bpm-case.service.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,2EAAC;AACD,6EAA6E;AAC7E,EAAE;AACF,mEAAmE;AACnE,EAAE;AACF,EAAE;AACF,OAAO,EAAE,UAAA,EAAW,MAAO,eAAA,CAAA;AAC3B,OAAO,EAAE,IAAA,EAAe,MAAO,eAAA,CAAA;AAG/B,OAAO,yBAAA,CAAA;AACP,OAAO,uBAAA,CAAA;AAEP,OAAO,EAAE,yBAAA,EAA0B,MAAO,8CAAA,CAAA;AAC1C,OAAO,EAAE,wBAAA,EAAyB,MAAO,4CAAA,CAAA;AAGzC,OAAO,EAAE,sBAAA,EAAuB,MAAO,6BAAA,CAAA;AAGvC;IAA+C,6CAAyB;IAIpE,mCACY,aAAuC,EACvC,IAAU;QAFtB,YAKI,iBAAO,SAIV;QARW,mBAAa,GAAb,aAAa,CAA0B;QACvC,UAAI,GAAJ,IAAI,CAAM;QALd,kBAAY,GAAW,WAAW,CAAA;QAUtC,0BAA0B;QAC1B,KAAI,CAAC,WAAW,GAAG,aAAa,CAAC,UAAU,CAAC,MAAM,GAAG,KAAI,CAAC,YAAY,CAAA;;IAC1E,CAAC;IAED,+CAAW,GAAX,UAAY,WAAmC;QAC3C,IAAI,WAAW,GAA2B,IAAI,sBAAsB,EAAE,CAAA;QACtE,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,kBAAkB,CAAC,WAAW,CAAC,EAAE,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC;aACrE,GAAG,CAAC,WAAW,CAAC,gBAAgB,CAAC;aACjC,KAAK,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAA;IACpD,CAAC;IAEO,sDAAkB,GAA1B,UAA2B,WAAmC;QAC1D,MAAM,CAAC,IAAI,CAAC,WAAW,GAAG,GAAG,GAAG,WAAW,CAAC,mBAAmB,EAAE,CAAA;IACrE,CAAC;IAED,2CAAO,GAAP,UAAQ,MAAc;QAClB,IAAI,WAAW,GAA2B,IAAI,sBAAsB,EAAE,CAAA;QACtE,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,WAAW,GAAG,GAAG,GAAG,MAAM,EAAE,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC;aAChE,GAAG,CAAC,WAAW,CAAC,WAAW,CAAC;aAC5B,KAAK,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAA;IACpD,CAAC;IAED,kDAAc,GAAd,UAAe,MAAc;QACzB,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,WAAW,GAAG,GAAG,GAAG,MAAM,GAAG,UAAU,EAAE,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC;aAC7E,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC;aAC7B,KAAK,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAA;IACpD,CAAC;IAEE,oCAAU,GAA0B;QAC3C,EAAE,IAAI,EAAE,UAAU,EAAE;KACnB,CAAC;IACF,kBAAkB;IACX,wCAAc,GAAmE,cAAM,OAAA;QAC9F,EAAC,IAAI,EAAE,wBAAwB,GAAG;QAClC,EAAC,IAAI,EAAE,IAAI,GAAG;KACb,EAH6F,CAG7F,CAAC;IACF,gCAAC;CA/CD,AA+CC,CA/C8C,yBAAyB,GA+CvE;SA/CY,yBAAyB","file":"zgwnu-bonita-bpm-case.service.js","sourceRoot":"","sourcesContent":["// ZaakgerichtWerken.nu Bonita Rest Api BPM Case (Process Instance) Service\n// --------------------------------------------------------------------------\n//\n// based on http://documentation.bonitasoft.com/?page=bpm-api#toc23\n//\n//\nimport { Injectable } from '@angular/core'\nimport { Http, Response } from '@angular/http'\n\nimport { Observable } from 'rxjs/Observable'\nimport 'rxjs/add/operator/catch'\nimport 'rxjs/add/operator/map'\n\nimport { ZgwnuBonitaRestApiService } from '../../rest-api/zgwnu-bonita-rest-api.service'\nimport { ZgwnuBonitaConfigService } from '../../rest-api/zgwnu-bonita-config.service'\nimport { ZgwnuBonitaSearchParms } from '../zgwnu-bonita-search-parms'\nimport { ZgwnuBonitaCase } from './zgwnu-bonita-case'\nimport { ZgwnuBonitaCaseMapping } from './zgwnu-bonita-case-mapping'\n\n\nexport class ZgwnuBonitaBpmCaseService extends ZgwnuBonitaRestApiService {\n    private resourcePath: string = '/bpm/case'\n    private resourceUrl: string\n\n    constructor(\n        private configService: ZgwnuBonitaConfigService,\n        private http: Http\n    ) \n    { \n        super()\n\n        // configure resource urls\n        this.resourceUrl = configService.bonitaUrls.apiUrl + this.resourcePath\n    }\n\n    searchCases(searchParms: ZgwnuBonitaSearchParms): Observable<ZgwnuBonitaCase[]> {\n        let caseMapping: ZgwnuBonitaCaseMapping = new ZgwnuBonitaCaseMapping()\n        return this.http.get(this.buildSearchRequest(searchParms), this.configService.options)\n                        .map(caseMapping.mapResponseArray)\n                        .catch(this.handleResponseError)\n    }\n\n    private buildSearchRequest(searchParms: ZgwnuBonitaSearchParms): string {\n        return this.resourceUrl + '?' + searchParms.getUrlEncondedParms()\n    }\n\n    getCase(caseId: string): Observable<ZgwnuBonitaCase> {\n        let caseMapping: ZgwnuBonitaCaseMapping = new ZgwnuBonitaCaseMapping()\n        return this.http.get(this.resourceUrl + '/' + caseId, this.configService.options)\n                        .map(caseMapping.mapResponse)\n                        .catch(this.handleResponseError)\n    }\n\n    getCaseContext(caseId: string): Observable<any> {\n        return this.http.get(this.resourceUrl + '/' + caseId + '/context', this.configService.options)\n                        .map(this.mapping.mapResponse)\n                        .catch(this.handleResponseError)\n    }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ZgwnuBonitaConfigService, },\n{type: Http, },\n];\n}\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}