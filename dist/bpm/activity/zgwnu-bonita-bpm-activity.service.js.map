{"version":3,"sources":["../../../src/bpm/activity/zgwnu-bonita-bpm-activity.service.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,4DAAC;AACD,6EAA6E;AAC7E,EAAE;AACF,kEAAkE;AAClE,EAAE;AACF,EAAE;AACF,OAAO,EAAE,UAAA,EAAW,MAAO,eAAA,CAAA;AAC3B,OAAO,EAAE,IAAA,EAAwC,MAAO,eAAA,CAAA;AAGxD,OAAO,yBAAA,CAAA;AACP,OAAO,uBAAA,CAAA;AAEP,OAAO,EAAE,yBAAA,EAA0B,MAAO,8CAAA,CAAA;AAE1C,OAAO,EAAE,wBAAA,EAAyB,MAAO,4CAAA,CAAA;AAGzC,OAAO,EAAE,0BAAA,EAA2B,MAAO,iCAAA,CAAA;AAI3C;IAAmD,iDAAyB;IAIxE,uCACY,aAAuC,EACvC,IAAU;QAFtB,YAKI,iBAAO,SAEV;QANW,mBAAa,GAAb,aAAa,CAA0B;QACvC,UAAI,GAAJ,IAAI,CAAM;QALL,4BAAsB,GAAW,eAAe,CAAA;QAS7D,KAAI,CAAC,mBAAmB,GAAG,aAAa,CAAC,UAAU,CAAC,MAAM,GAAG,KAAI,CAAC,sBAAsB,CAAA;;IAC5F,CAAC;IAED,wDAAgB,GAAhB,UAAiB,WAAmC;QAChD,IAAI,eAAe,GAAoC,IAAI,0BAA0B,EAAE,CAAA;QACvF,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,0BAA0B,CAAC,WAAW,CAAC,EAAE,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC;aAC7E,GAAG,CAAC,eAAe,CAAC,gBAAgB,CAAC;aACrC,KAAK,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAA;IACpD,CAAC;IAEO,kEAA0B,GAAlC,UAAmC,WAAmC;QAClE,MAAM,CAAC,IAAI,CAAC,mBAAmB,GAAG,GAAG,GAAG,WAAW,CAAC,mBAAmB,EAAE,CAAA;IAC7E,CAAC;IAED,mDAAW,GAAX,UAAY,UAAkB;QAC1B,IAAI,eAAe,GAAoC,IAAI,0BAA0B,EAAE,CAAA;QACvF,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,mBAAmB,GAAG,GAAG,GAAG,UAAU,EAAE,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC;aAC5E,GAAG,CAAC,eAAe,CAAC,WAAW,CAAC;aAChC,KAAK,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAA;IACpD,CAAC;IAEE,wCAAU,GAA0B;QAC3C,EAAE,IAAI,EAAE,UAAU,EAAE;KACnB,CAAC;IACF,kBAAkB;IACX,4CAAc,GAAmE,cAAM,OAAA;QAC9F,EAAC,IAAI,EAAE,wBAAwB,GAAG;QAClC,EAAC,IAAI,EAAE,IAAI,GAAG;KACb,EAH6F,CAG7F,CAAC;IACF,oCAAC;CAvCD,AAuCC,CAvCkD,yBAAyB,GAuC3E;SAvCY,6BAA6B","file":"zgwnu-bonita-bpm-activity.service.js","sourceRoot":"","sourcesContent":["// ZaakgerichtWerken.nu Bonita Rest Api BPM Activity Service\n// --------------------------------------------------------------------------\n//\n// based on http://documentation.bonitasoft.com/?page=bpm-api#toc1\n//\n//\nimport { Injectable } from '@angular/core'\nimport { Http, Response, Headers, RequestOptions } from '@angular/http'\n\nimport { Observable } from 'rxjs/Observable'\nimport 'rxjs/add/operator/catch'\nimport 'rxjs/add/operator/map'\n\nimport { ZgwnuBonitaRestApiService } from '../../rest-api/zgwnu-bonita-rest-api.service'\nimport { ZgwnuBonitaDataMappingInterface } from '../../rest-api/zgwnu-bonita-data-mapping.interface'\nimport { ZgwnuBonitaConfigService } from '../../rest-api/zgwnu-bonita-config.service'\nimport { ZgwnuBonitaSearchParms } from '../zgwnu-bonita-search-parms'\nimport { ZgwnuBonitaActivity } from './zgwnu-bonita-activity'\nimport { ZgwnuBonitaActivityMapping } from './zgwnu-bonita-activity-mapping'\nimport { ZgwnuBonitaResponse } from '../../rest-api/zgwnu-bonita-response'\n\n\nexport class ZgwnuBonitaBpmActivityService extends ZgwnuBonitaRestApiService {\n    private readonly ACTIVITY_RESOURCE_PATH: string = '/bpm/activity'\n    private activityResourceUrl: string\n\n    constructor(\n        private configService: ZgwnuBonitaConfigService,\n        private http: Http\n    ) \n    { \n        super()\n        this.activityResourceUrl = configService.bonitaUrls.apiUrl + this.ACTIVITY_RESOURCE_PATH\n    }\n\n    searchActivities(searchParms: ZgwnuBonitaSearchParms): Observable<ZgwnuBonitaActivity[]> {\n        let activityMapping: ZgwnuBonitaDataMappingInterface = new ZgwnuBonitaActivityMapping()\n        return this.http.get(this.buildActivitySearchRequest(searchParms), this.configService.options)\n                        .map(activityMapping.mapResponseArray)\n                        .catch(this.handleResponseError)\n    }\n\n    private buildActivitySearchRequest(searchParms: ZgwnuBonitaSearchParms): string {\n        return this.activityResourceUrl + '?' + searchParms.getUrlEncondedParms()\n    }\n\n    getActivity(activityId: string): Observable<ZgwnuBonitaActivity> {\n        let activityMapping: ZgwnuBonitaDataMappingInterface = new ZgwnuBonitaActivityMapping()\n        return this.http.get(this.activityResourceUrl + '/' + activityId, this.configService.options)\n                        .map(activityMapping.mapResponse)\n                        .catch(this.handleResponseError)\n    }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ZgwnuBonitaConfigService, },\n{type: Http, },\n];\n}\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}