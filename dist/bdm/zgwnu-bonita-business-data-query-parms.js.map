{"version":3,"sources":["../../src/bdm/zgwnu-bonita-business-data-query-parms.ts"],"names":[],"mappings":"AAAA,sEAAsE;AACtE,6EAA6E;AAC7E,EAAE;AACF,kEAAkE;AAClE,EAAE;AACF,iFAAiF;AACjF,gDAAgD;AAChD,EAAE;AACF;IAEE,2CACS,SAAiB,EACjB,IAAY,EACZ,KAAa,EACb,eAA0B;QAH1B,cAAS,GAAT,SAAS,CAAQ;QACjB,SAAI,GAAJ,IAAI,CAAQ;QACZ,UAAK,GAAL,KAAK,CAAQ;QACb,oBAAe,GAAf,eAAe,CAAW;IAC9B,CAAC;IAEN,+DAAmB,GAAnB;QACI,IAAI,UAAkB,CAAC;QAEvB,+BAA+B;QAC/B,UAAU,GAAG,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC;QAEpC,kCAAkC;QAClC,UAAU,GAAG,UAAU,GAAG,KAAK,GAAG,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAEpD,+CAA+C;QAC/C,UAAU,GAAG,UAAU,GAAG,KAAK,GAAG,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAErD,4FAA4F;QAC5F,qEAAqE;QACrE,qDAAqD;QACrD,EAAE,CAAC,CAAC,IAAI,CAAC,eAAe,IAAI,SAAS,CAAC,CAAC,CAAC;YACrC,GAAG,CAAC,CAAc,UAAoB,EAApB,KAAA,IAAI,CAAC,eAAe,EAApB,cAAoB,EAApB,IAAoB;gBAAjC,IAAI,KAAK,SAAA;gBAEX,UAAU,GAAG,UAAU,GAAG,KAAK,GAAG,kBAAkB,CAAC,KAAK,CAAC,CAAC;aAC/D;QACH,CAAC;QAED,4BAA4B;QAC5B,IAAI,eAAe,GAAW,UAAU,CAAC,OAAO,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC;QAE9D,MAAM,CAAC,eAAe,CAAC;IAC3B,CAAC;IAEH,wCAAC;AAAD,CArCA,AAqCC,IAAA","file":"zgwnu-bonita-business-data-query-parms.js","sourceRoot":"","sourcesContent":["// ZaakgerichtWerken.nu Bonita Rest Api Business Data Query Parameters\n// --------------------------------------------------------------------------\n//\n// based on http://documentation.bonitasoft.com/?page=bdm-api#toc1\n//\n// Request URL template: ../API/bdm/businessData/_businessDataType_?q=_queryName_\n//                       &p=0&c=10&f=param=value\n//\nexport class ZgwnuBonitaBusinessDataQueryParms {\n\n  constructor(\n    public queryName: string,\n    public page: number,\n    public count: number,\n    public parameterValues?: string[]\n  ) {  }\n\n  getUrlEncondedParms(): string {\n      var buildParms: string;\n\n      // q=queryName - the query name\n      buildParms = '&q=' + this.queryName;\n\n      // p: index of the page to display\n      buildParms = buildParms + '&p=' + String(this.page);\n      \n      // c: the maximum number of results in the page\n      buildParms = buildParms + '&c=' + String(this.count);\n      \n      // f=parameter=value - sets the parameter value according to business data query parameters \n      //             defined in Bonita BPM Studio For a Boolean parameter, \n      //             the accepted values are true or false.\n      if (this.parameterValues != undefined) {\n         for (let value of this.parameterValues)\n        { \n            buildParms = buildParms + '&f=' + encodeURIComponent(value);\n        }\n      }\n\n      // return spaces '+' encoded\n      var urlEncodedParms: string = buildParms.replace(/%20/g, '+');\n      \n      return urlEncodedParms;\n  }\n\n}"]}