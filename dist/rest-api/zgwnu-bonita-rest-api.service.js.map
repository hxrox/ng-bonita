{"version":3,"sources":["../../src/rest-api/zgwnu-bonita-rest-api.service.ts"],"names":[],"mappings":"AAAA,+CAAC;AACD,6EAA6E;AAC7E,EAAE;AACF,+DAA+D;AAC/D,EAAE;AACF,EAAE;AACF,OAAO,EAAE,UAAA,EAAW,MAAO,eAAA,CAAA;AAC3B,OAAO,EAAE,QAAA,EAAS,MAAO,eAAA,CAAA;AAEzB,OAAO,EAAE,UAAA,EAAW,MAAO,iBAAA,CAAA;AAE3B,OAAO,2BAAA,CAAA;AAIP,OAAO,EAAE,sBAAA,EAAuB,MAAO,6BAAA,CAAA;AACvC,OAAO,EAAE,mBAAA,EAAoB,MAAO,yBAAA,CAAA;AACpC,OAAO,EAAE,wBAAA,EAAyB,MAAO,+BAAA,CAAA;AAGzC;IAAA;QAEc,YAAO,GAAoC,IAAI,sBAAsB,EAAE,CAAA;IA+BrF,CAAC;IA7Ba,sDAAkB,GAA5B,UAA6B,GAAa;QACtC,IAAI,eAAe,GAAwB,IAAI,mBAAmB,EAAE,CAAA;QACpE,eAAe,CAAC,MAAM,GAAG,GAAG,CAAC,MAAM,CAAA;QACnC,EAAE,CAAC,CAAC,GAAG,CAAC,UAAU,CAAC;YAAC,eAAe,CAAC,UAAU,GAAG,GAAG,CAAC,UAAU,CAAA;QAC/D,MAAM,CAAC,eAAe,CAAA;IAC1B,CAAC;IAES,uDAAmB,GAA7B,UAA8B,KAAqB;QAC/C,IAAI,aAAa,GAA6B,IAAI,wBAAwB,EAAE,CAAA;QAC5E,EAAE,CAAC,CAAC,KAAK,YAAY,QAAQ,CAAC,CAAC,CAAC;YAC5B,aAAa,CAAC,MAAM,GAAG,KAAK,CAAC,MAAM,CAAA;YACnC,EAAE,CAAC,CAAC,KAAK,CAAC,UAAU,CAAC;gBAAC,aAAa,CAAC,UAAU,GAAG,KAAK,CAAC,UAAU,CAAA;YACjE,IAAM,IAAI,GAAG,KAAK,CAAC,IAAI,EAAE,CAAA;YACzB,aAAa,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAA;YACxC,aAAa,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAA;YACpC,aAAa,CAAC,YAAY,GAAG,IAAI,CAAC,YAAY,CAAA;QAClD,CAAC;QAAC,IAAI,CAAC,CAAC;YACJ,aAAa,CAAC,MAAM,GAAG,CAAC,CAAA;YACxB,aAAa,CAAC,UAAU,GAAG,KAAK,CAAC,OAAO,GAAG,KAAK,CAAC,OAAO,GAAG,KAAK,CAAC,QAAQ,EAAE,CAAA;QAC/E,CAAC;QACD,MAAM,CAAC,UAAU,CAAC,KAAK,CAAC,aAAa,CAAC,CAAA;IAC1C,CAAC;IAEE,oCAAU,GAA0B;QAC3C,EAAE,IAAI,EAAE,UAAU,EAAE;KACnB,CAAC;IACF,kBAAkB;IACX,wCAAc,GAAmE,cAAM,OAAA,EAC7F,EAD6F,CAC7F,CAAC;IACF,gCAAC;CAjCD,AAiCC,IAAA;SAjCqB,yBAAyB","file":"zgwnu-bonita-rest-api.service.js","sourceRoot":"","sourcesContent":["// ZaakgerichtWerken.nu Bonita Rest Api Service\n// --------------------------------------------------------------------------\n//\n// based on http://documentation.bonitasoft.com/?page=_rest-api\n//\n//\nimport { Injectable } from '@angular/core'\nimport { Response } from '@angular/http'\n\nimport { Observable } from 'rxjs/Observable'\nimport { ErrorObservable } from 'rxjs/observable/ErrorObservable'\nimport 'rxjs/add/observable/throw'\n\nimport { ZgwnuBonitaConfigService } from './zgwnu-bonita-config.service'\nimport { ZgwnuBonitaDataMappingInterface } from './zgwnu-bonita-data-mapping.interface'\nimport { ZgwnuBonitaDataMapping } from './zgwnu-bonita-data-mapping'\nimport { ZgwnuBonitaResponse } from './zgwnu-bonita-response'\nimport { ZgwnuBonitaErrorResponse } from './zgwnu-bonita-error-response'\n\n\nexport abstract class ZgwnuBonitaRestApiService {\n    \n    protected mapping: ZgwnuBonitaDataMappingInterface = new ZgwnuBonitaDataMapping()\n\n    protected mapSuccessResponse(res: Response) {\n        let successResponse: ZgwnuBonitaResponse = new ZgwnuBonitaResponse()\n        successResponse.status = res.status\n        if (res.statusText) successResponse.statusText = res.statusText\n        return successResponse\n    }\n\n    protected handleResponseError(error: Response | any) {\n        let errorResponse: ZgwnuBonitaErrorResponse = new ZgwnuBonitaErrorResponse()\n        if (error instanceof Response) {\n            errorResponse.status = error.status\n            if (error.statusText) errorResponse.statusText = error.statusText\n            const body = error.json()\n            errorResponse.exception = body.exception\n            errorResponse.message = body.message\n            errorResponse.explanations = body.explanations\n        } else {\n            errorResponse.status = 0\n            errorResponse.statusText = error.message ? error.message : error.toString()\n        }\n        return Observable.throw(errorResponse)\n    }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}