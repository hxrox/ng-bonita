{"version":3,"sources":["../../src/rest-api/zgwnu-bonita-config.service.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,UAAA,EAAW,MAAO,eAAA,CAAA;AAC3B,OAAO,EAAE,OAAA,EAAS,cAAA,EAAe,MAAO,eAAA,CAAA;AAGxC,OAAO,EAAE,eAAA,EAAgB,MAAO,qBAAA,CAAA;AAGhC;IAaI,kCAAoB,UAA2B;QAA3B,eAAU,GAAV,UAAU,CAAiB;QAZ/C,0DAA0D;QACnD,6BAAwB,GAAW,+BAA+B,CAAA;QAEzE,mBAAmB;QACV,0BAAqB,GAAW,oBAAoB,CAAA;QACrD,mBAAc,GAAY,IAAI,OAAO,CAAC,EAAE,cAAc,EAAE,kBAAkB,EAAE,CAAC,CAAA;QAC9E,YAAO,GAAmB,IAAI,cAAc,CAAC,EAAE,OAAO,EAAE,IAAI,CAAC,cAAc,EAAE,CAAC,CAAA;IAQrF,CAAC;IAED,sBAAI,6CAAO;aAKX;YACI,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAA;QACxB,CAAC;aAPD,UAAY,OAA2B;YACnC,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAA;YACvB,IAAI,CAAC,iBAAiB,EAAE,CAAA;QAC5B,CAAC;;;OAAA;IAMO,oDAAiB,GAAzB;QACI,IAAI,kBAAkB,GAAY,IAAI,OAAO,CAAC,EAAE,cAAc,EAAE,kBAAkB,EAAE,CAAC,CAAA;QACrF,IAAI,CAAC,WAAW,GAAG,IAAI,cAAc,CAAC,EAAE,OAAO,EAAE,kBAAkB,EAAE,CAAC,CAAA;QACtE,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,WAAW,CAAC,CAAA;IAC/C,CAAC;IAED,uDAAoB,GAApB,UAAqB,UAA0B;QAC3C,EAAE,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;YACtB,EAAE,CAAC,CAAC,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC,CAAC;gBACtB,UAAU,CAAC,OAAO,GAAG,IAAI,CAAC,cAAc,CAAA;YAC5C,CAAC;YACD,UAAU,CAAC,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,qBAAqB,EAAE,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAA;QAC9E,CAAC;IACL,CAAC;IAEE,mCAAU,GAA0B;QAC3C,EAAE,IAAI,EAAE,UAAU,EAAE;KACnB,CAAC;IACF,kBAAkB;IACX,uCAAc,GAAmE,cAAM,OAAA;QAC9F,EAAC,IAAI,EAAE,eAAe,GAAG;KACxB,EAF6F,CAE7F,CAAC;IACF,+BAAC;CAhDD,AAgDC,IAAA;SAhDY,wBAAwB","file":"zgwnu-bonita-config.service.js","sourceRoot":"","sourcesContent":["import { Injectable } from '@angular/core'\nimport { Headers, RequestOptions } from '@angular/http'\n\nimport { ZgwnuBonitaSession } from './zgwnu-bonita-session'\nimport { ZgwnuBonitaUrls } from './zgwnu-bonita-urls'\n\n\nexport class ZgwnuBonitaConfigService {\n    // default zgwnu Business Data Model Package configuration\n    public businessDataModelPackage: string = 'com.zaakgerichtwerkennu.model'\n\n    // rest api options\n    readonly bonitaSessionTokenKey: string = 'X-Bonita-API-Token'\n    private defaultHeaders: Headers = new Headers({ 'Content-Type': 'application/json' })\n    public options: RequestOptions = new RequestOptions({ headers: this.defaultHeaders })\n    public sendOptions: RequestOptions\n\n    // current session\n    private _session: ZgwnuBonitaSession\n\n    constructor (public bonitaUrls: ZgwnuBonitaUrls)\n    {\n    }\n\n    set session(session: ZgwnuBonitaSession) {\n        this._session = session\n        this.configSendOptions()\n    }\n\n    get session() {\n        return this._session\n    }\n\n    private configSendOptions() {\n        let defaultSendHeaders: Headers = new Headers({ 'Content-Type': 'application/json' })\n        this.sendOptions = new RequestOptions({ headers: defaultSendHeaders })\n        this.appendSessionOptions(this.sendOptions)\n    }\n\n    appendSessionOptions(optionsRef: RequestOptions) {\n        if (this._session.token) {\n            if (!optionsRef.headers) {\n                optionsRef.headers = this.defaultHeaders\n            }\n            optionsRef.headers.append(this.bonitaSessionTokenKey, this._session.token)\n        }\n    }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ZgwnuBonitaUrls, },\n];\n}\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}